user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Upstream server for the Flask/Gunicorn application
    # 'app' is the service name of the Flask app in docker-compose.yml
    # '8000' is the port Gunicorn listens on within the Docker network
    upstream flask_app {
        server app:8000;
    }

    server {
        listen 80;
        server_name localhost; # Or your domain name

        # Set client body size to allow for large file uploads (e.g., 100MB)
        client_max_body_size 100M;

        # Location for static files
        # /var/www/static/ is where static files will be copied in the Nginx Dockerfile
        location /static {
            alias /var/www/static/;
            expires 30d; # Cache static files for 30 days
            add_header Cache-Control "public";
        }

        # Proxy all other requests to the Gunicorn upstream
        location / {
            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
    }
}
